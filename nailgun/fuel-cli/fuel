#!/usr/bin/env python
#    Copyright 2013 Mirantis, Inc.
#
#    Licensed under the Apache License, Version 2.0 (the "License"); you may
#    not use this file except in compliance with the License. You may obtain
#    a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#    License for the specific language governing permissions and limitations
#    under the License.

import argparse
from itertools import chain
import json
from pprint import pprint
import sys
import urllib2

API_ROOT = "http://127.0.0.1:8000/api/"

facts = """
[
  {
    "management_interface": "eth0.101",
    "use_cow_images": true,
    "uid": "1",
    "mountpoints": "11\\n22\\n",
    "fixed_network_range": "10.0.0.0/24",
    "storage_interface": "eth0.102",
    "management_vip": "192.168.0.2",
    "public_vip": "172.16.1.2",
    "syslog": {
      "syslog_port": "514",
      "syslog_transport": "udp",
      "syslog_server": ""
    },
    "libvirt_type": "qemu",
    "cobbler": {
      "profile": "centos-x86_64"
    },
    "controller_nodes": [
      {
        "storage_netmask": "255.255.255.0",
        "uid": "1",
        "public_address": "172.16.1.3",
        "internal_address": "192.168.0.3",
        "swift_zone": "1",
        "name": "controller-1",
        "internal_netmask": "255.255.255.0",
        "fqdn": "controller-1.mirantis.com",
        "role": "controller",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.2"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "2",
        "public_address": "172.16.1.4",
        "internal_address": "192.168.0.4",
        "swift_zone": "2",
        "name": "controller-2",
        "internal_netmask": "255.255.255.0",
        "fqdn": "controller-2.mirantis.com",
        "role": "controller",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.3"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "3",
        "public_address": "172.16.1.5",
        "internal_address": "192.168.0.5",
        "swift_zone": "3",
        "name": "controller-3",
        "internal_netmask": "255.255.255.0",
        "fqdn": "controller-3.mirantis.com",
        "role": "controller",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.4"
      }
    ],
    "mysql": {
      "root_password": "T0XkzgTB"
    },
    "glance": {
      "db_password": "Y97e8Y2Z",
      "user_password": "zxQEFPqH",
      "image_cache_max_size": "10737418240"
    },
    "public_interface": "eth0.100",
    "network_data": {
      "eth0.100": {
        "interface": "eth0.100",
        "ipaddr": [
          "172.16.1.3/24"
        ],
        "gateway": "172.16.1.1",
        "_name": "public"
      },
      "eth0.101": {
        "interface": "eth0.101",
        "ipaddr": [
          "192.168.0.3/24"
        ],
        "_name": "management"
      },
      "eth0.102": {
        "interface": "eth0.102",
        "ipaddr": [
          "192.168.1.2/24"
        ],
        "_name": "storage"
      },
      "eth0.103": {
        "interface": "eth0.103",
        "ipaddr": "none",
        "_name": "fixed"
      },
      "lo": {
        "interface": "lo",
        "ipaddr": [
          "127.0.0.1/8"
        ]
      },
      "eth4": {
        "interface": "eth4",
        "ipaddr": "none"
      },
      "eth3": {
        "interface": "eth3",
        "ipaddr": "none"
      },
      "eth2": {
        "interface": "eth2",
        "ipaddr": "none"
      },
      "eth1": {
        "interface": "eth1",
        "ipaddr": "none"
      },
      "eth0": {
        "interface": "eth0",
        "ipaddr": "dhcp",
        "_name": "admin"
      }
    },
    "management_network_range": "192.168.0.0/24",
    "floating_interface": "eth0.100",
    "nova": {
      "db_password": "3nZpr0B5",
      "user_password": "taNRy0Wv",
      "state_path": "/var/lib/nova"
    },
    "master_ip": "10.108.6.2",
    "access": {
      "password": "admin",
      "user": "admin",
      "tenant": "admin",
      "email": "admin@example.org"
    },
    "role": "controller",
    "online": true,
    "use_cinder": true,
    "nodes": [
      {
        "storage_netmask": "255.255.255.0",
        "uid": "1",
        "public_address": "172.16.1.3",
        "internal_address": "192.168.0.3",
        "swift_zone": "1",
        "name": "controller-1",
        "internal_netmask": "255.255.255.0",
        "fqdn": "controller-1.mirantis.com",
        "role": "primary-controller",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.2"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "2",
        "public_address": "172.16.1.4",
        "internal_address": "192.168.0.4",
        "swift_zone": "2",
        "name": "controller-2",
        "internal_netmask": "255.255.255.0",
        "fqdn": "controller-2.mirantis.com",
        "role": "controller",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.3"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "3",
        "public_address": "172.16.1.5",
        "internal_address": "192.168.0.5",
        "swift_zone": "3",
        "name": "controller-3",
        "internal_netmask": "255.255.255.0",
        "fqdn": "controller-3.mirantis.com",
        "role": "controller",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.4"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "4",
        "public_address": "172.16.1.6",
        "internal_address": "192.168.0.6",
        "swift_zone": "4",
        "name": "storage-4",
        "internal_netmask": "255.255.255.0",
        "fqdn": "storage-4.mirantis.com",
        "role": "storage",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.5"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "5",
        "public_address": "172.16.1.7",
        "internal_address": "192.168.0.7",
        "swift_zone": "5",
        "name": "cinder-5",
        "internal_netmask": "255.255.255.0",
        "fqdn": "cinder-5.mirantis.com",
        "role": "cinder",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.6"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "6",
        "public_address": "172.16.1.8",
        "internal_address": "192.168.0.8",
        "swift_zone": "6",
        "name": "compute-6",
        "internal_netmask": "255.255.255.0",
        "fqdn": "compute-6.mirantis.com",
        "role": "compute",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.7"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "7",
        "public_address": "172.16.1.9",
        "internal_address": "192.168.0.9",
        "swift_zone": "7",
        "name": "primary-swift-proxy-7",
        "internal_netmask": "255.255.255.0",
        "fqdn": "primary-swift-proxy-7.mirantis.com",
        "role": "primary-swift-proxy",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.8"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "8",
        "public_address": "172.16.1.10",
        "internal_address": "192.168.0.10",
        "swift_zone": "8",
        "name": "swift-proxy-8",
        "internal_netmask": "255.255.255.0",
        "fqdn": "swift-proxy-8.mirantis.com",
        "role": "swift-proxy",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.9"
      }
    ],
    "mp": [
      {
        "weight": "1",
        "point": "1"
      },
      {
        "weight": "2",
        "point": "2"
      }
    ],
    "status": "error",
    "deployment_mode": "ha_full",
    "keystone": {
      "db_password": "xrFxVTEJ",
      "admin_token": "p4tHAQth"
    },
    "novanetwork_parameters": {
      "network_manager": "FlatDHCPManager",
      "network_size": 256
    },
    "auto_assign_floating_ip": false,
    "start_guests_on_host_boot": true,
    "rabbit": {
      "password": "7HImcqsO"
    },
    "swift": {
      "user_password": "7CO6bZNy"
    },
    "base_syslog": {
      "syslog_port": "514",
      "syslog_server": "10.108.6.2"
    },
    "storage_network_range": "192.168.1.0/24",
    "floating_network_range": [
      "172.16.0.2-172.16.0.254"
    ],
    "auth_key": "",
    "last_controller": "controller-3",
    "fqdn": "controller-1.mirantis.com",
    "compute_scheduler_driver": "nova.scheduler.filter_scheduler.FilterScheduler",
    "fixed_interface": "eth0.103",
    "admin_interface": "eth0",
    "cinder": {
      "db_password": "JeCIN3rB",
      "user_password": "T2wuJEOr"
    },
    "deployment_id": 1
  },
  {
    "management_interface": "eth0.101",
    "use_cow_images": true,
    "uid": "2",
    "mountpoints": "11\\n22\\n",
    "fixed_network_range": "10.0.0.0/24",
    "storage_interface": "eth0.102",
    "management_vip": "192.168.0.2",
    "public_vip": "172.16.1.2",
    "syslog": {
      "syslog_port": "514",
      "syslog_transport": "udp",
      "syslog_server": ""
    },
    "libvirt_type": "qemu",
    "cobbler": {
      "profile": "centos-x86_64"
    },
    "controller_nodes": [
      {
        "storage_netmask": "255.255.255.0",
        "uid": "1",
        "public_address": "172.16.1.3",
        "internal_address": "192.168.0.3",
        "swift_zone": "1",
        "name": "controller-1",
        "internal_netmask": "255.255.255.0",
        "fqdn": "controller-1.mirantis.com",
        "role": "controller",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.2"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "2",
        "public_address": "172.16.1.4",
        "internal_address": "192.168.0.4",
        "swift_zone": "2",
        "name": "controller-2",
        "internal_netmask": "255.255.255.0",
        "fqdn": "controller-2.mirantis.com",
        "role": "controller",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.3"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "3",
        "public_address": "172.16.1.5",
        "internal_address": "192.168.0.5",
        "swift_zone": "3",
        "name": "controller-3",
        "internal_netmask": "255.255.255.0",
        "fqdn": "controller-3.mirantis.com",
        "role": "controller",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.4"
      }
    ],
    "mysql": {
      "root_password": "T0XkzgTB"
    },
    "glance": {
      "db_password": "Y97e8Y2Z",
      "user_password": "zxQEFPqH",
      "image_cache_max_size": "10737418240"
    },
    "public_interface": "eth0.100",
    "network_data": {
      "eth0.100": {
        "interface": "eth0.100",
        "ipaddr": [
          "172.16.1.4/24"
        ],
        "gateway": "172.16.1.1",
        "_name": "public"
      },
      "eth0.101": {
        "interface": "eth0.101",
        "ipaddr": [
          "192.168.0.4/24"
        ],
        "_name": "management"
      },
      "eth0.102": {
        "interface": "eth0.102",
        "ipaddr": [
          "192.168.1.3/24"
        ],
        "_name": "storage"
      },
      "eth0.103": {
        "interface": "eth0.103",
        "ipaddr": "none",
        "_name": "fixed"
      },
      "lo": {
        "interface": "lo",
        "ipaddr": [
          "127.0.0.1/8"
        ]
      },
      "eth4": {
        "interface": "eth4",
        "ipaddr": "none"
      },
      "eth3": {
        "interface": "eth3",
        "ipaddr": "none"
      },
      "eth2": {
        "interface": "eth2",
        "ipaddr": "none"
      },
      "eth1": {
        "interface": "eth1",
        "ipaddr": "none"
      },
      "eth0": {
        "interface": "eth0",
        "ipaddr": "dhcp",
        "_name": "admin"
      }
    },
    "management_network_range": "192.168.0.0/24",
    "floating_interface": "eth0.100",
    "nova": {
      "db_password": "3nZpr0B5",
      "user_password": "taNRy0Wv",
      "state_path": "/var/lib/nova"
    },
    "master_ip": "10.108.6.2",
    "access": {
      "password": "admin",
      "user": "admin",
      "tenant": "admin",
      "email": "admin@example.org"
    },
    "role": "controller",
    "online": true,
    "use_cinder": true,
    "nodes": [
      {
        "storage_netmask": "255.255.255.0",
        "uid": "1",
        "public_address": "172.16.1.3",
        "internal_address": "192.168.0.3",
        "swift_zone": "1",
        "name": "controller-1",
        "internal_netmask": "255.255.255.0",
        "fqdn": "controller-1.mirantis.com",
        "role": "primary-controller",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.2"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "2",
        "public_address": "172.16.1.4",
        "internal_address": "192.168.0.4",
        "swift_zone": "2",
        "name": "controller-2",
        "internal_netmask": "255.255.255.0",
        "fqdn": "controller-2.mirantis.com",
        "role": "controller",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.3"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "3",
        "public_address": "172.16.1.5",
        "internal_address": "192.168.0.5",
        "swift_zone": "3",
        "name": "controller-3",
        "internal_netmask": "255.255.255.0",
        "fqdn": "controller-3.mirantis.com",
        "role": "controller",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.4"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "4",
        "public_address": "172.16.1.6",
        "internal_address": "192.168.0.6",
        "swift_zone": "4",
        "name": "storage-4",
        "internal_netmask": "255.255.255.0",
        "fqdn": "storage-4.mirantis.com",
        "role": "storage",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.5"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "5",
        "public_address": "172.16.1.7",
        "internal_address": "192.168.0.7",
        "swift_zone": "5",
        "name": "cinder-5",
        "internal_netmask": "255.255.255.0",
        "fqdn": "cinder-5.mirantis.com",
        "role": "cinder",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.6"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "6",
        "public_address": "172.16.1.8",
        "internal_address": "192.168.0.8",
        "swift_zone": "6",
        "name": "compute-6",
        "internal_netmask": "255.255.255.0",
        "fqdn": "compute-6.mirantis.com",
        "role": "compute",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.7"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "7",
        "public_address": "172.16.1.9",
        "internal_address": "192.168.0.9",
        "swift_zone": "7",
        "name": "primary-swift-proxy-7",
        "internal_netmask": "255.255.255.0",
        "fqdn": "primary-swift-proxy-7.mirantis.com",
        "role": "primary-swift-proxy",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.8"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "8",
        "public_address": "172.16.1.10",
        "internal_address": "192.168.0.10",
        "swift_zone": "8",
        "name": "swift-proxy-8",
        "internal_netmask": "255.255.255.0",
        "fqdn": "swift-proxy-8.mirantis.com",
        "role": "swift-proxy",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.9"
      }
    ],
    "mp": [
      {
        "weight": "1",
        "point": "1"
      },
      {
        "weight": "2",
        "point": "2"
      }
    ],
    "status": "error",
    "deployment_mode": "ha_full",
    "keystone": {
      "db_password": "xrFxVTEJ",
      "admin_token": "p4tHAQth"
    },
    "novanetwork_parameters": {
      "network_manager": "FlatDHCPManager",
      "network_size": 256
    },
    "auto_assign_floating_ip": false,
    "start_guests_on_host_boot": true,
    "rabbit": {
      "password": "7HImcqsO"
    },
    "swift": {
      "user_password": "7CO6bZNy"
    },
    "base_syslog": {
      "syslog_port": "514",
      "syslog_server": "10.108.6.2"
    },
    "storage_network_range": "192.168.1.0/24",
    "floating_network_range": [
      "172.16.0.2-172.16.0.254"
    ],
    "auth_key": "",
    "last_controller": "controller-3",
    "fqdn": "controller-2.mirantis.com",
    "compute_scheduler_driver": "nova.scheduler.filter_scheduler.FilterScheduler",
    "fixed_interface": "eth0.103",
    "admin_interface": "eth0",
    "cinder": {
      "db_password": "JeCIN3rB",
      "user_password": "T2wuJEOr"
    },
    "deployment_id": 1
  },
  {
    "management_interface": "eth0.101",
    "use_cow_images": true,
    "uid": "3",
    "mountpoints": "11\\n22\\n",
    "fixed_network_range": "10.0.0.0/24",
    "storage_interface": "eth0.102",
    "management_vip": "192.168.0.2",
    "public_vip": "172.16.1.2",
    "syslog": {
      "syslog_port": "514",
      "syslog_transport": "udp",
      "syslog_server": ""
    },
    "libvirt_type": "qemu",
    "cobbler": {
      "profile": "centos-x86_64"
    },
    "controller_nodes": [
      {
        "storage_netmask": "255.255.255.0",
        "uid": "1",
        "public_address": "172.16.1.3",
        "internal_address": "192.168.0.3",
        "swift_zone": "1",
        "name": "controller-1",
        "internal_netmask": "255.255.255.0",
        "fqdn": "controller-1.mirantis.com",
        "role": "controller",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.2"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "2",
        "public_address": "172.16.1.4",
        "internal_address": "192.168.0.4",
        "swift_zone": "2",
        "name": "controller-2",
        "internal_netmask": "255.255.255.0",
        "fqdn": "controller-2.mirantis.com",
        "role": "controller",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.3"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "3",
        "public_address": "172.16.1.5",
        "internal_address": "192.168.0.5",
        "swift_zone": "3",
        "name": "controller-3",
        "internal_netmask": "255.255.255.0",
        "fqdn": "controller-3.mirantis.com",
        "role": "controller",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.4"
      }
    ],
    "mysql": {
      "root_password": "T0XkzgTB"
    },
    "glance": {
      "db_password": "Y97e8Y2Z",
      "user_password": "zxQEFPqH",
      "image_cache_max_size": "10737418240"
    },
    "public_interface": "eth0.100",
    "network_data": {
      "eth0.100": {
        "interface": "eth0.100",
        "ipaddr": [
          "172.16.1.5/24"
        ],
        "gateway": "172.16.1.1",
        "_name": "public"
      },
      "eth0.101": {
        "interface": "eth0.101",
        "ipaddr": [
          "192.168.0.5/24"
        ],
        "_name": "management"
      },
      "eth0.102": {
        "interface": "eth0.102",
        "ipaddr": [
          "192.168.1.4/24"
        ],
        "_name": "storage"
      },
      "eth0.103": {
        "interface": "eth0.103",
        "ipaddr": "none",
        "_name": "fixed"
      },
      "lo": {
        "interface": "lo",
        "ipaddr": [
          "127.0.0.1/8"
        ]
      },
      "eth4": {
        "interface": "eth4",
        "ipaddr": "none"
      },
      "eth3": {
        "interface": "eth3",
        "ipaddr": "none"
      },
      "eth2": {
        "interface": "eth2",
        "ipaddr": "none"
      },
      "eth1": {
        "interface": "eth1",
        "ipaddr": "none"
      },
      "eth0": {
        "interface": "eth0",
        "ipaddr": "dhcp",
        "_name": "admin"
      }
    },
    "management_network_range": "192.168.0.0/24",
    "floating_interface": "eth0.100",
    "nova": {
      "db_password": "3nZpr0B5",
      "user_password": "taNRy0Wv",
      "state_path": "/var/lib/nova"
    },
    "master_ip": "10.108.6.2",
    "access": {
      "password": "admin",
      "user": "admin",
      "tenant": "admin",
      "email": "admin@example.org"
    },
    "role": "controller",
    "online": true,
    "use_cinder": true,
    "nodes": [
      {
        "storage_netmask": "255.255.255.0",
        "uid": "1",
        "public_address": "172.16.1.3",
        "internal_address": "192.168.0.3",
        "swift_zone": "1",
        "name": "controller-1",
        "internal_netmask": "255.255.255.0",
        "fqdn": "controller-1.mirantis.com",
        "role": "primary-controller",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.2"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "2",
        "public_address": "172.16.1.4",
        "internal_address": "192.168.0.4",
        "swift_zone": "2",
        "name": "controller-2",
        "internal_netmask": "255.255.255.0",
        "fqdn": "controller-2.mirantis.com",
        "role": "controller",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.3"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "3",
        "public_address": "172.16.1.5",
        "internal_address": "192.168.0.5",
        "swift_zone": "3",
        "name": "controller-3",
        "internal_netmask": "255.255.255.0",
        "fqdn": "controller-3.mirantis.com",
        "role": "controller",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.4"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "4",
        "public_address": "172.16.1.6",
        "internal_address": "192.168.0.6",
        "swift_zone": "4",
        "name": "storage-4",
        "internal_netmask": "255.255.255.0",
        "fqdn": "storage-4.mirantis.com",
        "role": "storage",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.5"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "5",
        "public_address": "172.16.1.7",
        "internal_address": "192.168.0.7",
        "swift_zone": "5",
        "name": "cinder-5",
        "internal_netmask": "255.255.255.0",
        "fqdn": "cinder-5.mirantis.com",
        "role": "cinder",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.6"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "6",
        "public_address": "172.16.1.8",
        "internal_address": "192.168.0.8",
        "swift_zone": "6",
        "name": "compute-6",
        "internal_netmask": "255.255.255.0",
        "fqdn": "compute-6.mirantis.com",
        "role": "compute",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.7"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "7",
        "public_address": "172.16.1.9",
        "internal_address": "192.168.0.9",
        "swift_zone": "7",
        "name": "primary-swift-proxy-7",
        "internal_netmask": "255.255.255.0",
        "fqdn": "primary-swift-proxy-7.mirantis.com",
        "role": "primary-swift-proxy",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.8"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "8",
        "public_address": "172.16.1.10",
        "internal_address": "192.168.0.10",
        "swift_zone": "8",
        "name": "swift-proxy-8",
        "internal_netmask": "255.255.255.0",
        "fqdn": "swift-proxy-8.mirantis.com",
        "role": "swift-proxy",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.9"
      }
    ],
    "mp": [
      {
        "weight": "1",
        "point": "1"
      },
      {
        "weight": "2",
        "point": "2"
      }
    ],
    "status": "error",
    "deployment_mode": "ha_full",
    "keystone": {
      "db_password": "xrFxVTEJ",
      "admin_token": "p4tHAQth"
    },
    "novanetwork_parameters": {
      "network_manager": "FlatDHCPManager",
      "network_size": 256
    },
    "auto_assign_floating_ip": false,
    "start_guests_on_host_boot": true,
    "rabbit": {
      "password": "7HImcqsO"
    },
    "swift": {
      "user_password": "7CO6bZNy"
    },
    "base_syslog": {
      "syslog_port": "514",
      "syslog_server": "10.108.6.2"
    },
    "storage_network_range": "192.168.1.0/24",
    "floating_network_range": [
      "172.16.0.2-172.16.0.254"
    ],
    "auth_key": "",
    "last_controller": "controller-3",
    "fqdn": "controller-3.mirantis.com",
    "compute_scheduler_driver": "nova.scheduler.filter_scheduler.FilterScheduler",
    "fixed_interface": "eth0.103",
    "admin_interface": "eth0",
    "cinder": {
      "db_password": "JeCIN3rB",
      "user_password": "T2wuJEOr"
    },
    "deployment_id": 1
  },
  {
    "management_interface": "eth0.101",
    "use_cow_images": true,
    "uid": "4",
    "mountpoints": "11\\n22\\n",
    "fixed_network_range": "10.0.0.0/24",
    "storage_interface": "eth0.102",
    "management_vip": "192.168.0.2",
    "public_vip": "172.16.1.2",
    "syslog": {
      "syslog_port": "514",
      "syslog_transport": "udp",
      "syslog_server": ""
    },
    "libvirt_type": "qemu",
    "cobbler": {
      "profile": "centos-x86_64"
    },
    "controller_nodes": [
      {
        "storage_netmask": "255.255.255.0",
        "uid": "1",
        "public_address": "172.16.1.3",
        "internal_address": "192.168.0.3",
        "swift_zone": "1",
        "name": "controller-1",
        "internal_netmask": "255.255.255.0",
        "fqdn": "controller-1.mirantis.com",
        "role": "controller",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.2"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "2",
        "public_address": "172.16.1.4",
        "internal_address": "192.168.0.4",
        "swift_zone": "2",
        "name": "controller-2",
        "internal_netmask": "255.255.255.0",
        "fqdn": "controller-2.mirantis.com",
        "role": "controller",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.3"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "3",
        "public_address": "172.16.1.5",
        "internal_address": "192.168.0.5",
        "swift_zone": "3",
        "name": "controller-3",
        "internal_netmask": "255.255.255.0",
        "fqdn": "controller-3.mirantis.com",
        "role": "controller",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.4"
      }
    ],
    "mysql": {
      "root_password": "T0XkzgTB"
    },
    "glance": {
      "db_password": "Y97e8Y2Z",
      "user_password": "zxQEFPqH",
      "image_cache_max_size": "10737418240"
    },
    "public_interface": "eth0.100",
    "network_data": {
      "eth0.100": {
        "interface": "eth0.100",
        "ipaddr": [
          "172.16.1.6/24"
        ],
        "gateway": "172.16.1.1",
        "_name": "public"
      },
      "eth0.101": {
        "interface": "eth0.101",
        "ipaddr": [
          "192.168.0.6/24"
        ],
        "_name": "management"
      },
      "eth0.102": {
        "interface": "eth0.102",
        "ipaddr": [
          "192.168.1.5/24"
        ],
        "_name": "storage"
      },
      "eth0.103": {
        "interface": "eth0.103",
        "ipaddr": "none",
        "_name": "fixed"
      },
      "lo": {
        "interface": "lo",
        "ipaddr": [
          "127.0.0.1/8"
        ]
      },
      "eth4": {
        "interface": "eth4",
        "ipaddr": "none"
      },
      "eth3": {
        "interface": "eth3",
        "ipaddr": "none"
      },
      "eth2": {
        "interface": "eth2",
        "ipaddr": "none"
      },
      "eth1": {
        "interface": "eth1",
        "ipaddr": "none"
      },
      "eth0": {
        "interface": "eth0",
        "ipaddr": "dhcp",
        "_name": "admin"
      }
    },
    "management_network_range": "192.168.0.0/24",
    "floating_interface": "eth0.100",
    "nova": {
      "db_password": "3nZpr0B5",
      "user_password": "taNRy0Wv",
      "state_path": "/var/lib/nova"
    },
    "master_ip": "10.108.6.2",
    "access": {
      "password": "admin",
      "user": "admin",
      "tenant": "admin",
      "email": "admin@example.org"
    },
    "role": "storage",
    "online": true,
    "use_cinder": true,
    "nodes": [
      {
        "storage_netmask": "255.255.255.0",
        "uid": "1",
        "public_address": "172.16.1.3",
        "internal_address": "192.168.0.3",
        "swift_zone": "1",
        "name": "controller-1",
        "internal_netmask": "255.255.255.0",
        "fqdn": "controller-1.mirantis.com",
        "role": "primary-controller",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.2"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "2",
        "public_address": "172.16.1.4",
        "internal_address": "192.168.0.4",
        "swift_zone": "2",
        "name": "controller-2",
        "internal_netmask": "255.255.255.0",
        "fqdn": "controller-2.mirantis.com",
        "role": "controller",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.3"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "3",
        "public_address": "172.16.1.5",
        "internal_address": "192.168.0.5",
        "swift_zone": "3",
        "name": "controller-3",
        "internal_netmask": "255.255.255.0",
        "fqdn": "controller-3.mirantis.com",
        "role": "controller",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.4"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "4",
        "public_address": "172.16.1.6",
        "internal_address": "192.168.0.6",
        "swift_zone": "4",
        "name": "storage-4",
        "internal_netmask": "255.255.255.0",
        "fqdn": "storage-4.mirantis.com",
        "role": "storage",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.5"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "5",
        "public_address": "172.16.1.7",
        "internal_address": "192.168.0.7",
        "swift_zone": "5",
        "name": "cinder-5",
        "internal_netmask": "255.255.255.0",
        "fqdn": "cinder-5.mirantis.com",
        "role": "cinder",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.6"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "6",
        "public_address": "172.16.1.8",
        "internal_address": "192.168.0.8",
        "swift_zone": "6",
        "name": "compute-6",
        "internal_netmask": "255.255.255.0",
        "fqdn": "compute-6.mirantis.com",
        "role": "compute",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.7"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "7",
        "public_address": "172.16.1.9",
        "internal_address": "192.168.0.9",
        "swift_zone": "7",
        "name": "primary-swift-proxy-7",
        "internal_netmask": "255.255.255.0",
        "fqdn": "primary-swift-proxy-7.mirantis.com",
        "role": "primary-swift-proxy",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.8"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "8",
        "public_address": "172.16.1.10",
        "internal_address": "192.168.0.10",
        "swift_zone": "8",
        "name": "swift-proxy-8",
        "internal_netmask": "255.255.255.0",
        "fqdn": "swift-proxy-8.mirantis.com",
        "role": "swift-proxy",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.9"
      }
    ],
    "mp": [
      {
        "weight": "1",
        "point": "1"
      },
      {
        "weight": "2",
        "point": "2"
      }
    ],
    "status": "error",
    "deployment_mode": "ha_full",
    "keystone": {
      "db_password": "xrFxVTEJ",
      "admin_token": "p4tHAQth"
    },
    "novanetwork_parameters": {
      "network_manager": "FlatDHCPManager",
      "network_size": 256
    },
    "auto_assign_floating_ip": false,
    "start_guests_on_host_boot": true,
    "rabbit": {
      "password": "7HImcqsO"
    },
    "swift": {
      "user_password": "7CO6bZNy"
    },
    "base_syslog": {
      "syslog_port": "514",
      "syslog_server": "10.108.6.2"
    },
    "storage_network_range": "192.168.1.0/24",
    "floating_network_range": [
      "172.16.0.2-172.16.0.254"
    ],
    "auth_key": "",
    "last_controller": "controller-3",
    "fqdn": "storage-4.mirantis.com",
    "compute_scheduler_driver": "nova.scheduler.filter_scheduler.FilterScheduler",
    "fixed_interface": "eth0.103",
    "admin_interface": "eth0",
    "cinder": {
      "db_password": "JeCIN3rB",
      "user_password": "T2wuJEOr"
    },
    "deployment_id": 1
  },
  {
    "management_interface": "eth0.101",
    "use_cow_images": true,
    "uid": "5",
    "mountpoints": "11\\n22\\n",
    "fixed_network_range": "10.0.0.0/24",
    "storage_interface": "eth0.102",
    "management_vip": "192.168.0.2",
    "public_vip": "172.16.1.2",
    "syslog": {
      "syslog_port": "514",
      "syslog_transport": "udp",
      "syslog_server": ""
    },
    "libvirt_type": "qemu",
    "cobbler": {
      "profile": "centos-x86_64"
    },
    "controller_nodes": [
      {
        "storage_netmask": "255.255.255.0",
        "uid": "1",
        "public_address": "172.16.1.3",
        "internal_address": "192.168.0.3",
        "swift_zone": "1",
        "name": "controller-1",
        "internal_netmask": "255.255.255.0",
        "fqdn": "controller-1.mirantis.com",
        "role": "controller",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.2"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "2",
        "public_address": "172.16.1.4",
        "internal_address": "192.168.0.4",
        "swift_zone": "2",
        "name": "controller-2",
        "internal_netmask": "255.255.255.0",
        "fqdn": "controller-2.mirantis.com",
        "role": "controller",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.3"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "3",
        "public_address": "172.16.1.5",
        "internal_address": "192.168.0.5",
        "swift_zone": "3",
        "name": "controller-3",
        "internal_netmask": "255.255.255.0",
        "fqdn": "controller-3.mirantis.com",
        "role": "controller",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.4"
      }
    ],
    "mysql": {
      "root_password": "T0XkzgTB"
    },
    "glance": {
      "db_password": "Y97e8Y2Z",
      "user_password": "zxQEFPqH",
      "image_cache_max_size": "10737418240"
    },
    "public_interface": "eth0.100",
    "network_data": {
      "eth0.100": {
        "interface": "eth0.100",
        "ipaddr": [
          "172.16.1.7/24"
        ],
        "gateway": "172.16.1.1",
        "_name": "public"
      },
      "eth0.101": {
        "interface": "eth0.101",
        "ipaddr": [
          "192.168.0.7/24"
        ],
        "_name": "management"
      },
      "eth0.102": {
        "interface": "eth0.102",
        "ipaddr": [
          "192.168.1.6/24"
        ],
        "_name": "storage"
      },
      "eth0.103": {
        "interface": "eth0.103",
        "ipaddr": "none",
        "_name": "fixed"
      },
      "lo": {
        "interface": "lo",
        "ipaddr": [
          "127.0.0.1/8"
        ]
      },
      "eth4": {
        "interface": "eth4",
        "ipaddr": "none"
      },
      "eth3": {
        "interface": "eth3",
        "ipaddr": "none"
      },
      "eth2": {
        "interface": "eth2",
        "ipaddr": "none"
      },
      "eth1": {
        "interface": "eth1",
        "ipaddr": "none"
      },
      "eth0": {
        "interface": "eth0",
        "ipaddr": "dhcp",
        "_name": "admin"
      }
    },
    "management_network_range": "192.168.0.0/24",
    "floating_interface": "eth0.100",
    "nova": {
      "db_password": "3nZpr0B5",
      "user_password": "taNRy0Wv",
      "state_path": "/var/lib/nova"
    },
    "master_ip": "10.108.6.2",
    "access": {
      "password": "admin",
      "user": "admin",
      "tenant": "admin",
      "email": "admin@example.org"
    },
    "role": "cinder",
    "online": true,
    "use_cinder": true,
    "nodes": [
      {
        "storage_netmask": "255.255.255.0",
        "uid": "1",
        "public_address": "172.16.1.3",
        "internal_address": "192.168.0.3",
        "swift_zone": "1",
        "name": "controller-1",
        "internal_netmask": "255.255.255.0",
        "fqdn": "controller-1.mirantis.com",
        "role": "primary-controller",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.2"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "2",
        "public_address": "172.16.1.4",
        "internal_address": "192.168.0.4",
        "swift_zone": "2",
        "name": "controller-2",
        "internal_netmask": "255.255.255.0",
        "fqdn": "controller-2.mirantis.com",
        "role": "controller",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.3"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "3",
        "public_address": "172.16.1.5",
        "internal_address": "192.168.0.5",
        "swift_zone": "3",
        "name": "controller-3",
        "internal_netmask": "255.255.255.0",
        "fqdn": "controller-3.mirantis.com",
        "role": "controller",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.4"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "4",
        "public_address": "172.16.1.6",
        "internal_address": "192.168.0.6",
        "swift_zone": "4",
        "name": "storage-4",
        "internal_netmask": "255.255.255.0",
        "fqdn": "storage-4.mirantis.com",
        "role": "storage",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.5"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "5",
        "public_address": "172.16.1.7",
        "internal_address": "192.168.0.7",
        "swift_zone": "5",
        "name": "cinder-5",
        "internal_netmask": "255.255.255.0",
        "fqdn": "cinder-5.mirantis.com",
        "role": "cinder",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.6"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "6",
        "public_address": "172.16.1.8",
        "internal_address": "192.168.0.8",
        "swift_zone": "6",
        "name": "compute-6",
        "internal_netmask": "255.255.255.0",
        "fqdn": "compute-6.mirantis.com",
        "role": "compute",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.7"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "7",
        "public_address": "172.16.1.9",
        "internal_address": "192.168.0.9",
        "swift_zone": "7",
        "name": "primary-swift-proxy-7",
        "internal_netmask": "255.255.255.0",
        "fqdn": "primary-swift-proxy-7.mirantis.com",
        "role": "primary-swift-proxy",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.8"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "8",
        "public_address": "172.16.1.10",
        "internal_address": "192.168.0.10",
        "swift_zone": "8",
        "name": "swift-proxy-8",
        "internal_netmask": "255.255.255.0",
        "fqdn": "swift-proxy-8.mirantis.com",
        "role": "swift-proxy",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.9"
      }
    ],
    "mp": [
      {
        "weight": "1",
        "point": "1"
      },
      {
        "weight": "2",
        "point": "2"
      }
    ],
    "status": "error",
    "deployment_mode": "ha_full",
    "keystone": {
      "db_password": "xrFxVTEJ",
      "admin_token": "p4tHAQth"
    },
    "novanetwork_parameters": {
      "network_manager": "FlatDHCPManager",
      "network_size": 256
    },
    "auto_assign_floating_ip": false,
    "start_guests_on_host_boot": true,
    "rabbit": {
      "password": "7HImcqsO"
    },
    "swift": {
      "user_password": "7CO6bZNy"
    },
    "base_syslog": {
      "syslog_port": "514",
      "syslog_server": "10.108.6.2"
    },
    "storage_network_range": "192.168.1.0/24",
    "floating_network_range": [
      "172.16.0.2-172.16.0.254"
    ],
    "auth_key": "",
    "last_controller": "controller-3",
    "fqdn": "cinder-5.mirantis.com",
    "compute_scheduler_driver": "nova.scheduler.filter_scheduler.FilterScheduler",
    "fixed_interface": "eth0.103",
    "admin_interface": "eth0",
    "cinder": {
      "db_password": "JeCIN3rB",
      "user_password": "T2wuJEOr"
    },
    "deployment_id": 1
  },
  {
    "management_interface": "eth0.101",
    "use_cow_images": true,
    "uid": "6",
    "mountpoints": "11\\n22\\n",
    "fixed_network_range": "10.0.0.0/24",
    "storage_interface": "eth0.102",
    "management_vip": "192.168.0.2",
    "public_vip": "172.16.1.2",
    "syslog": {
      "syslog_port": "514",
      "syslog_transport": "udp",
      "syslog_server": ""
    },
    "libvirt_type": "qemu",
    "cobbler": {
      "profile": "centos-x86_64"
    },
    "controller_nodes": [
      {
        "storage_netmask": "255.255.255.0",
        "uid": "1",
        "public_address": "172.16.1.3",
        "internal_address": "192.168.0.3",
        "swift_zone": "1",
        "name": "controller-1",
        "internal_netmask": "255.255.255.0",
        "fqdn": "controller-1.mirantis.com",
        "role": "controller",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.2"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "2",
        "public_address": "172.16.1.4",
        "internal_address": "192.168.0.4",
        "swift_zone": "2",
        "name": "controller-2",
        "internal_netmask": "255.255.255.0",
        "fqdn": "controller-2.mirantis.com",
        "role": "controller",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.3"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "3",
        "public_address": "172.16.1.5",
        "internal_address": "192.168.0.5",
        "swift_zone": "3",
        "name": "controller-3",
        "internal_netmask": "255.255.255.0",
        "fqdn": "controller-3.mirantis.com",
        "role": "controller",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.4"
      }
    ],
    "mysql": {
      "root_password": "T0XkzgTB"
    },
    "glance": {
      "db_password": "Y97e8Y2Z",
      "user_password": "zxQEFPqH",
      "image_cache_max_size": "10737418240"
    },
    "public_interface": "eth0.100",
    "network_data": {
      "eth0.100": {
        "interface": "eth0.100",
        "ipaddr": [
          "172.16.1.8/24"
        ],
        "gateway": "172.16.1.1",
        "_name": "public"
      },
      "eth0.101": {
        "interface": "eth0.101",
        "ipaddr": [
          "192.168.0.8/24"
        ],
        "_name": "management"
      },
      "eth0.102": {
        "interface": "eth0.102",
        "ipaddr": [
          "192.168.1.7/24"
        ],
        "_name": "storage"
      },
      "eth0.103": {
        "interface": "eth0.103",
        "ipaddr": "none",
        "_name": "fixed"
      },
      "lo": {
        "interface": "lo",
        "ipaddr": [
          "127.0.0.1/8"
        ]
      },
      "eth4": {
        "interface": "eth4",
        "ipaddr": "none"
      },
      "eth3": {
        "interface": "eth3",
        "ipaddr": "none"
      },
      "eth2": {
        "interface": "eth2",
        "ipaddr": "none"
      },
      "eth1": {
        "interface": "eth1",
        "ipaddr": "none"
      },
      "eth0": {
        "interface": "eth0",
        "ipaddr": "dhcp",
        "_name": "admin"
      }
    },
    "management_network_range": "192.168.0.0/24",
    "floating_interface": "eth0.100",
    "nova": {
      "db_password": "3nZpr0B5",
      "user_password": "taNRy0Wv",
      "state_path": "/var/lib/nova"
    },
    "master_ip": "10.108.6.2",
    "access": {
      "password": "admin",
      "user": "admin",
      "tenant": "admin",
      "email": "admin@example.org"
    },
    "role": "compute",
    "online": true,
    "use_cinder": true,
    "nodes": [
      {
        "storage_netmask": "255.255.255.0",
        "uid": "1",
        "public_address": "172.16.1.3",
        "internal_address": "192.168.0.3",
        "swift_zone": "1",
        "name": "controller-1",
        "internal_netmask": "255.255.255.0",
        "fqdn": "controller-1.mirantis.com",
        "role": "primary-controller",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.2"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "2",
        "public_address": "172.16.1.4",
        "internal_address": "192.168.0.4",
        "swift_zone": "2",
        "name": "controller-2",
        "internal_netmask": "255.255.255.0",
        "fqdn": "controller-2.mirantis.com",
        "role": "controller",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.3"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "3",
        "public_address": "172.16.1.5",
        "internal_address": "192.168.0.5",
        "swift_zone": "3",
        "name": "controller-3",
        "internal_netmask": "255.255.255.0",
        "fqdn": "controller-3.mirantis.com",
        "role": "controller",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.4"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "4",
        "public_address": "172.16.1.6",
        "internal_address": "192.168.0.6",
        "swift_zone": "4",
        "name": "storage-4",
        "internal_netmask": "255.255.255.0",
        "fqdn": "storage-4.mirantis.com",
        "role": "storage",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.5"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "5",
        "public_address": "172.16.1.7",
        "internal_address": "192.168.0.7",
        "swift_zone": "5",
        "name": "cinder-5",
        "internal_netmask": "255.255.255.0",
        "fqdn": "cinder-5.mirantis.com",
        "role": "cinder",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.6"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "6",
        "public_address": "172.16.1.8",
        "internal_address": "192.168.0.8",
        "swift_zone": "6",
        "name": "compute-6",
        "internal_netmask": "255.255.255.0",
        "fqdn": "compute-6.mirantis.com",
        "role": "compute",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.7"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "7",
        "public_address": "172.16.1.9",
        "internal_address": "192.168.0.9",
        "swift_zone": "7",
        "name": "primary-swift-proxy-7",
        "internal_netmask": "255.255.255.0",
        "fqdn": "primary-swift-proxy-7.mirantis.com",
        "role": "primary-swift-proxy",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.8"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "8",
        "public_address": "172.16.1.10",
        "internal_address": "192.168.0.10",
        "swift_zone": "8",
        "name": "swift-proxy-8",
        "internal_netmask": "255.255.255.0",
        "fqdn": "swift-proxy-8.mirantis.com",
        "role": "swift-proxy",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.9"
      }
    ],
    "mp": [
      {
        "weight": "1",
        "point": "1"
      },
      {
        "weight": "2",
        "point": "2"
      }
    ],
    "status": "error",
    "deployment_mode": "ha_full",
    "keystone": {
      "db_password": "xrFxVTEJ",
      "admin_token": "p4tHAQth"
    },
    "novanetwork_parameters": {
      "network_manager": "FlatDHCPManager",
      "network_size": 256
    },
    "auto_assign_floating_ip": false,
    "start_guests_on_host_boot": true,
    "rabbit": {
      "password": "7HImcqsO"
    },
    "swift": {
      "user_password": "7CO6bZNy"
    },
    "base_syslog": {
      "syslog_port": "514",
      "syslog_server": "10.108.6.2"
    },
    "storage_network_range": "192.168.1.0/24",
    "floating_network_range": [
      "172.16.0.2-172.16.0.254"
    ],
    "auth_key": "",
    "last_controller": "controller-3",
    "fqdn": "compute-6.mirantis.com",
    "compute_scheduler_driver": "nova.scheduler.filter_scheduler.FilterScheduler",
    "fixed_interface": "eth0.103",
    "admin_interface": "eth0",
    "cinder": {
      "db_password": "JeCIN3rB",
      "user_password": "T2wuJEOr"
    },
    "deployment_id": 1
  },
  {
    "management_interface": "eth0.101",
    "use_cow_images": true,
    "uid": "7",
    "mountpoints": "11\\n22\\n",
    "fixed_network_range": "10.0.0.0/24",
    "storage_interface": "eth0.102",
    "management_vip": "192.168.0.2",
    "public_vip": "172.16.1.2",
    "syslog": {
      "syslog_port": "514",
      "syslog_transport": "udp",
      "syslog_server": ""
    },
    "libvirt_type": "qemu",
    "cobbler": {
      "profile": "centos-x86_64"
    },
    "controller_nodes": [
      {
        "storage_netmask": "255.255.255.0",
        "uid": "1",
        "public_address": "172.16.1.3",
        "internal_address": "192.168.0.3",
        "swift_zone": "1",
        "name": "controller-1",
        "internal_netmask": "255.255.255.0",
        "fqdn": "controller-1.mirantis.com",
        "role": "controller",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.2"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "2",
        "public_address": "172.16.1.4",
        "internal_address": "192.168.0.4",
        "swift_zone": "2",
        "name": "controller-2",
        "internal_netmask": "255.255.255.0",
        "fqdn": "controller-2.mirantis.com",
        "role": "controller",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.3"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "3",
        "public_address": "172.16.1.5",
        "internal_address": "192.168.0.5",
        "swift_zone": "3",
        "name": "controller-3",
        "internal_netmask": "255.255.255.0",
        "fqdn": "controller-3.mirantis.com",
        "role": "controller",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.4"
      }
    ],
    "mysql": {
      "root_password": "T0XkzgTB"
    },
    "glance": {
      "db_password": "Y97e8Y2Z",
      "user_password": "zxQEFPqH",
      "image_cache_max_size": "10737418240"
    },
    "public_interface": "eth0.100",
    "network_data": {
      "eth0.100": {
        "interface": "eth0.100",
        "ipaddr": [
          "172.16.1.9/24"
        ],
        "gateway": "172.16.1.1",
        "_name": "public"
      },
      "eth0.101": {
        "interface": "eth0.101",
        "ipaddr": [
          "192.168.0.9/24"
        ],
        "_name": "management"
      },
      "eth0.102": {
        "interface": "eth0.102",
        "ipaddr": [
          "192.168.1.8/24"
        ],
        "_name": "storage"
      },
      "eth0.103": {
        "interface": "eth0.103",
        "ipaddr": "none",
        "_name": "fixed"
      },
      "lo": {
        "interface": "lo",
        "ipaddr": [
          "127.0.0.1/8"
        ]
      },
      "eth4": {
        "interface": "eth4",
        "ipaddr": "none"
      },
      "eth3": {
        "interface": "eth3",
        "ipaddr": "none"
      },
      "eth2": {
        "interface": "eth2",
        "ipaddr": "none"
      },
      "eth1": {
        "interface": "eth1",
        "ipaddr": "none"
      },
      "eth0": {
        "interface": "eth0",
        "ipaddr": "dhcp",
        "_name": "admin"
      }
    },
    "management_network_range": "192.168.0.0/24",
    "floating_interface": "eth0.100",
    "nova": {
      "db_password": "3nZpr0B5",
      "user_password": "taNRy0Wv",
      "state_path": "/var/lib/nova"
    },
    "master_ip": "10.108.6.2",
    "access": {
      "password": "admin",
      "user": "admin",
      "tenant": "admin",
      "email": "admin@example.org"
    },
    "role": "primary-swift-proxy",
    "online": true,
    "use_cinder": true,
    "nodes": [
      {
        "storage_netmask": "255.255.255.0",
        "uid": "1",
        "public_address": "172.16.1.3",
        "internal_address": "192.168.0.3",
        "swift_zone": "1",
        "name": "controller-1",
        "internal_netmask": "255.255.255.0",
        "fqdn": "controller-1.mirantis.com",
        "role": "primary-controller",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.2"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "2",
        "public_address": "172.16.1.4",
        "internal_address": "192.168.0.4",
        "swift_zone": "2",
        "name": "controller-2",
        "internal_netmask": "255.255.255.0",
        "fqdn": "controller-2.mirantis.com",
        "role": "controller",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.3"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "3",
        "public_address": "172.16.1.5",
        "internal_address": "192.168.0.5",
        "swift_zone": "3",
        "name": "controller-3",
        "internal_netmask": "255.255.255.0",
        "fqdn": "controller-3.mirantis.com",
        "role": "controller",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.4"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "4",
        "public_address": "172.16.1.6",
        "internal_address": "192.168.0.6",
        "swift_zone": "4",
        "name": "storage-4",
        "internal_netmask": "255.255.255.0",
        "fqdn": "storage-4.mirantis.com",
        "role": "storage",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.5"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "5",
        "public_address": "172.16.1.7",
        "internal_address": "192.168.0.7",
        "swift_zone": "5",
        "name": "cinder-5",
        "internal_netmask": "255.255.255.0",
        "fqdn": "cinder-5.mirantis.com",
        "role": "cinder",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.6"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "6",
        "public_address": "172.16.1.8",
        "internal_address": "192.168.0.8",
        "swift_zone": "6",
        "name": "compute-6",
        "internal_netmask": "255.255.255.0",
        "fqdn": "compute-6.mirantis.com",
        "role": "compute",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.7"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "7",
        "public_address": "172.16.1.9",
        "internal_address": "192.168.0.9",
        "swift_zone": "7",
        "name": "primary-swift-proxy-7",
        "internal_netmask": "255.255.255.0",
        "fqdn": "primary-swift-proxy-7.mirantis.com",
        "role": "primary-swift-proxy",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.8"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "8",
        "public_address": "172.16.1.10",
        "internal_address": "192.168.0.10",
        "swift_zone": "8",
        "name": "swift-proxy-8",
        "internal_netmask": "255.255.255.0",
        "fqdn": "swift-proxy-8.mirantis.com",
        "role": "swift-proxy",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.9"
      }
    ],
    "mp": [
      {
        "weight": "1",
        "point": "1"
      },
      {
        "weight": "2",
        "point": "2"
      }
    ],
    "status": "error",
    "deployment_mode": "ha_full",
    "keystone": {
      "db_password": "xrFxVTEJ",
      "admin_token": "p4tHAQth"
    },
    "novanetwork_parameters": {
      "network_manager": "FlatDHCPManager",
      "network_size": 256
    },
    "auto_assign_floating_ip": false,
    "start_guests_on_host_boot": true,
    "rabbit": {
      "password": "7HImcqsO"
    },
    "swift": {
      "user_password": "7CO6bZNy"
    },
    "base_syslog": {
      "syslog_port": "514",
      "syslog_server": "10.108.6.2"
    },
    "storage_network_range": "192.168.1.0/24",
    "floating_network_range": [
      "172.16.0.2-172.16.0.254"
    ],
    "auth_key": "",
    "last_controller": "controller-3",
    "fqdn": "primary-swift-proxy-7.mirantis.com",
    "compute_scheduler_driver": "nova.scheduler.filter_scheduler.FilterScheduler",
    "fixed_interface": "eth0.103",
    "admin_interface": "eth0",
    "cinder": {
      "db_password": "JeCIN3rB",
      "user_password": "T2wuJEOr"
    },
    "deployment_id": 1
  },
  {
    "management_interface": "eth0.101",
    "use_cow_images": true,
    "uid": "8",
    "mountpoints": "11\\n22\\n",
    "fixed_network_range": "10.0.0.0/24",
    "storage_interface": "eth0.102",
    "management_vip": "192.168.0.2",
    "public_vip": "172.16.1.2",
    "syslog": {
      "syslog_port": "514",
      "syslog_transport": "udp",
      "syslog_server": ""
    },
    "libvirt_type": "qemu",
    "cobbler": {
      "profile": "centos-x86_64"
    },
    "controller_nodes": [
      {
        "storage_netmask": "255.255.255.0",
        "uid": "1",
        "public_address": "172.16.1.3",
        "internal_address": "192.168.0.3",
        "swift_zone": "1",
        "name": "controller-1",
        "internal_netmask": "255.255.255.0",
        "fqdn": "controller-1.mirantis.com",
        "role": "controller",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.2"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "2",
        "public_address": "172.16.1.4",
        "internal_address": "192.168.0.4",
        "swift_zone": "2",
        "name": "controller-2",
        "internal_netmask": "255.255.255.0",
        "fqdn": "controller-2.mirantis.com",
        "role": "controller",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.3"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "3",
        "public_address": "172.16.1.5",
        "internal_address": "192.168.0.5",
        "swift_zone": "3",
        "name": "controller-3",
        "internal_netmask": "255.255.255.0",
        "fqdn": "controller-3.mirantis.com",
        "role": "controller",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.4"
      }
    ],
    "mysql": {
      "root_password": "T0XkzgTB"
    },
    "glance": {
      "db_password": "Y97e8Y2Z",
      "user_password": "zxQEFPqH",
      "image_cache_max_size": "10737418240"
    },
    "public_interface": "eth0.100",
    "network_data": {
      "eth0.100": {
        "interface": "eth0.100",
        "ipaddr": [
          "172.16.1.10/24"
        ],
        "gateway": "172.16.1.1",
        "_name": "public"
      },
      "eth0.101": {
        "interface": "eth0.101",
        "ipaddr": [
          "192.168.0.10/24"
        ],
        "_name": "management"
      },
      "eth0.102": {
        "interface": "eth0.102",
        "ipaddr": [
          "192.168.1.9/24"
        ],
        "_name": "storage"
      },
      "eth0.103": {
        "interface": "eth0.103",
        "ipaddr": "none",
        "_name": "fixed"
      },
      "lo": {
        "interface": "lo",
        "ipaddr": [
          "127.0.0.1/8"
        ]
      },
      "eth4": {
        "interface": "eth4",
        "ipaddr": "none"
      },
      "eth3": {
        "interface": "eth3",
        "ipaddr": "none"
      },
      "eth2": {
        "interface": "eth2",
        "ipaddr": "none"
      },
      "eth1": {
        "interface": "eth1",
        "ipaddr": "none"
      },
      "eth0": {
        "interface": "eth0",
        "ipaddr": "dhcp",
        "_name": "admin"
      }
    },
    "management_network_range": "192.168.0.0/24",
    "floating_interface": "eth0.100",
    "nova": {
      "db_password": "3nZpr0B5",
      "user_password": "taNRy0Wv",
      "state_path": "/var/lib/nova"
    },
    "master_ip": "10.108.6.2",
    "access": {
      "password": "admin",
      "user": "admin",
      "tenant": "admin",
      "email": "admin@example.org"
    },
    "role": "swift-proxy",
    "online": true,
    "use_cinder": true,
    "nodes": [
      {
        "storage_netmask": "255.255.255.0",
        "uid": "1",
        "public_address": "172.16.1.3",
        "internal_address": "192.168.0.3",
        "swift_zone": "1",
        "name": "controller-1",
        "internal_netmask": "255.255.255.0",
        "fqdn": "controller-1.mirantis.com",
        "role": "primary-controller",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.2"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "2",
        "public_address": "172.16.1.4",
        "internal_address": "192.168.0.4",
        "swift_zone": "2",
        "name": "controller-2",
        "internal_netmask": "255.255.255.0",
        "fqdn": "controller-2.mirantis.com",
        "role": "controller",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.3"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "3",
        "public_address": "172.16.1.5",
        "internal_address": "192.168.0.5",
        "swift_zone": "3",
        "name": "controller-3",
        "internal_netmask": "255.255.255.0",
        "fqdn": "controller-3.mirantis.com",
        "role": "controller",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.4"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "4",
        "public_address": "172.16.1.6",
        "internal_address": "192.168.0.6",
        "swift_zone": "4",
        "name": "storage-4",
        "internal_netmask": "255.255.255.0",
        "fqdn": "storage-4.mirantis.com",
        "role": "storage",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.5"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "5",
        "public_address": "172.16.1.7",
        "internal_address": "192.168.0.7",
        "swift_zone": "5",
        "name": "cinder-5",
        "internal_netmask": "255.255.255.0",
        "fqdn": "cinder-5.mirantis.com",
        "role": "cinder",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.6"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "6",
        "public_address": "172.16.1.8",
        "internal_address": "192.168.0.8",
        "swift_zone": "6",
        "name": "compute-6",
        "internal_netmask": "255.255.255.0",
        "fqdn": "compute-6.mirantis.com",
        "role": "compute",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.7"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "7",
        "public_address": "172.16.1.9",
        "internal_address": "192.168.0.9",
        "swift_zone": "7",
        "name": "primary-swift-proxy-7",
        "internal_netmask": "255.255.255.0",
        "fqdn": "primary-swift-proxy-7.mirantis.com",
        "role": "primary-swift-proxy",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.8"
      },
      {
        "storage_netmask": "255.255.255.0",
        "uid": "8",
        "public_address": "172.16.1.10",
        "internal_address": "192.168.0.10",
        "swift_zone": "8",
        "name": "swift-proxy-8",
        "internal_netmask": "255.255.255.0",
        "fqdn": "swift-proxy-8.mirantis.com",
        "role": "swift-proxy",
        "public_netmask": "255.255.255.0",
        "storage_address": "192.168.1.9"
      }
    ],
    "mp": [
      {
        "weight": "1",
        "point": "1"
      },
      {
        "weight": "2",
        "point": "2"
      }
    ],
    "status": "error",
    "deployment_mode": "ha_full",
    "keystone": {
      "db_password": "xrFxVTEJ",
      "admin_token": "p4tHAQth"
    },
    "novanetwork_parameters": {
      "network_manager": "FlatDHCPManager",
      "network_size": 256
    },
    "auto_assign_floating_ip": false,
    "start_guests_on_host_boot": true,
    "rabbit": {
      "password": "7HImcqsO"
    },
    "swift": {
      "user_password": "7CO6bZNy"
    },
    "base_syslog": {
      "syslog_port": "514",
      "syslog_server": "10.108.6.2"
    },
    "storage_network_range": "192.168.1.0/24",
    "floating_network_range": [
      "172.16.0.2-172.16.0.254"
    ],
    "auth_key": "",
    "last_controller": "controller-3",
    "fqdn": "swift-proxy-8.mirantis.com",
    "compute_scheduler_driver": "nova.scheduler.filter_scheduler.FilterScheduler",
    "fixed_interface": "eth0.103",
    "admin_interface": "eth0",
    "cinder": {
      "db_password": "JeCIN3rB",
      "user_password": "T2wuJEOr"
    },
    "deployment_id": 1
  }
]
"""


class SetAction(argparse.Action):
        """argparse.Action subclass to store distinct values
        """
        def __call__(self, parser, namespace, values, option_string=None):
            try:
                getattr(namespace, self.dest).update(values)
            except AttributeError:
                setattr(namespace, self.dest, set(values))


def recur_get(multi_level_dict, key_chain):
    if not isinstance(multi_level_dict[key_chain[0]], dict):
        return multi_level_dict[key_chain[0]]
    else:
        return recur_get(multi_level_dict[key_chain[0]], key_chain[1:])


def format_table(data, acceptable_keys=None, subdict_keys=None):
    """Format list of dicts to string with ascii table
    """
    if subdict_keys:
        for key_chain in subdict_keys:
            for data_dict in data:
                data_dict[key_chain[0]] = recur_get(data_dict, key_chain)
    if acceptable_keys:
        rows = [tuple([value[key] for key in acceptable_keys])
                for value in data]
        header = tuple(acceptable_keys)
    else:
        rows = [tuple(x.values()) for x in data]
        header = tuple(data[0].keys())
    number_of_columns = len(header)
    column_widths = dict(
        zip(
            range(number_of_columns),
            (len(str(x)) for x in header)
        )
    )

    for row in rows:
        column_widths.update(
            (index, max(column_widths[index], len(str(element))))
            for index, element in enumerate(row)
        )
    row_template = ' | '.join(
        '%%-%ss' % column_widths[i] for i in range(number_of_columns)
    )

    return '\n'.join(
        (row_template % header,
         '-|-'.join(column_widths[column_index]*'-'
                    for column_index in range(number_of_columns)),
         '\n'.join(row_template % x for x in rows))
    )


def json_api_put_request(api, data):
    # print(
    #     "PUT request to address {0} with data: {1}"
    #     .format(API_ROOT + api, data)
    # )
    opener = urllib2.build_opener(urllib2.HTTPHandler)
    request = urllib2.Request(API_ROOT + api, data=data)
    request.add_header('Content-Type', ' application/json')
    request.get_method = lambda: 'PUT'
    return json.loads(
        opener.open(request).read()
    )


def json_api_get_request(api):
    request = urllib2.urlopen(API_ROOT + api)
    return json.loads(
        request.read()
    )


def json_api_post_request(api, data):
    # print(
    #     "POST request to address {0} with data: {1}"
    #     .format(API_ROOT + api,data)
    # )
    return json.loads(
        urllib2.urlopen(
            url=API_ROOT + api,
            data=data
        ).read()
    )


def release(params):
    acceptable_keys = ["id", "name", "state", "operating_system", "version"]
    if not any(params.__dict__.values()) or params.list:
        data = json_api_get_request("releases/")
        for release in data:
            del release['description']
        print(format_table(data, acceptable_keys=acceptable_keys))
    if params.rid:
        try:
            data = json_api_get_request("releases/" + params.rid + "/")
            print(format_table([data], acceptable_keys=acceptable_keys))
        except urllib2.HTTPError:
            print("Error. No release with such rid!")
    # print(params)


def environment(params):
    eid = getattr(params, "eid")
    delattr(params, "eid")
    if not any(params.__dict__.values()) or params.list:
        acceptable_keys = ["id", "status", "name", "mode",
                           "release", "changes"]
        data = json_api_get_request("clusters/")
        if eid:
            data = filter(
                lambda x: x[u"id"] == int(eid),
                data
            )
        print(format_table(data, acceptable_keys=acceptable_keys,
                           subdict_keys=[("release", u"id")]))
    if params.create:
        if params.ename and params.rid:
            data = {"nodes": [],
                    "tasks": [],
                    "name": params.ename,
                    "release": int(params.rid)}
            data = json.dumps(data)
            post_response = json_api_post_request("clusters/", data)
            print(
                "Environment {0} was created successfully."
                .format(params.ename)
            )
            if params.mode:
                data = {"mode": params.mode}
                data = json.dumps(data)
                put_response = json_api_put_request(
                    "clusters/{0}".format(post_response[u"id"]),
                    data
                )
                pprint(json.dumps(put_response))
        else:
            print(
                "You need to specify --ename and --rid!"
            )
    if params.set and (params.mode or params.ename):
        if eid:
            data = {}
            if params.mode:
                data["mode"] = params.mode
            if params.ename:
                data["name"] = params.ename
            data = json.dumps(data)
            put_response = json_api_put_request(
                "clusters/{0}".format(eid),
                data
            )
            pprint(json.dumps(put_response))
        else:
            print("Environment id [--eid] is required!")


def node(params):
    eid = getattr(params, "eid")
    delattr(params, "eid")
    if not any(params.__dict__.values()) or params.list:
        acceptable_keys = ["id", "status", "name", "cluster",
                           "mac", "role", "online"]
        data = json_api_get_request("nodes/")
        if eid:
            data = filter(
                lambda x: x[u"cluster"] == int(eid),
                data
            )
        print(
            format_table(data, acceptable_keys=acceptable_keys)
        )
    if params.set:
        if params.nid and params.role and eid:
            node_ids = list(chain(*params.nid))
            role = params.role.pop().lower()
            env_id = eid
            data = map(
                lambda node_id: {
                    "id": node_id,
                    "cluster_id": env_id,
                    "role": role,
                    "pending_addition": True,
                    "pending_deletion": False
                },
                node_ids
            )
            put_response = json_api_put_request("nodes/", json.dumps(data))
            pprint(json.dumps(put_response))
        else:
            print("Adjust arguments!")
    # print(params)


def network(params):
    print(params)


def settings(params):
    print(params)


def logs(params):
    print(params)


def task(params):
    print(params)


def notifications(params):
    print(params)


def health(params):
    print(params)


def deploy(params):
    if params.eid:
        put_response = json_api_put_request(
            "clusters/{0}/changes".format(params.eid),
            "{}"
        )
        pprint(json.dumps(put_response))
    else:
        print("Environment id [--eid] is required!")


def fact(params):
    print(facts)


def test_fun(x):
    filtered = [y for y in x.split(",") if y.strip() != '']
    if len(filtered) > 1:
        return map(int, filtered)
    elif len(filtered) == 1:
        return [int(filtered[0])]
    else:
        return None


actions = {
    "release": {
        "action": release,
        "args": [{
            "args": ["-l", "--list"],
            "params": {
                "dest": "list",
                "action": "store_true",
                "help": "List all available releases.",
                "default": False
            }
        }, {
            "args": ["-c", "--config"],
            "params": {
                "dest": "config",
                "action": "store_true",
                "help": "Configure release with --rid",
                "default": False
            }
        }, {
            "args": ["--rid"],
            "params": {
                "dest": "rid",
                "action": "store",
                "type": str,
                "help": "Specify release id to configure",
                "default": None
            }
        }]
    },
    "environment": {
        "action": environment,
        "args": [{
            "args": ["-l", "--list"],
            "params": {
                "dest": "list",
                "action": "store_true",
                "help": "List all available environments.",
                "default": False
            }
        }, {
            "args": ["-c", "--env-create", "--create"],
            "params": {
                "dest": "create",
                "action": "store_true",
                "help": "Create a new environment with specific "
                        "release id and name.",
                "default": False
            }
        }, {
            "args": ["--eid", "--env-id"],
            "params": {
                "dest": "eid",
                "action": "store",
                "type": str,
                "help": "environment id",
                "default": None
            }
        }, {
            "args": ["--name", "--ename", "--env-name"],
            "params": {
                "dest": "ename",
                "action": "store",
                "type": str,
                "help": "environment name",
                "default": None
            }
        }, {
            "args": ["-s", "--set"],
            "params": {
                "dest": "set",
                "action": "store_true",
                "help": "Set environment parameters (e.g ename, "
                        "deployment mode)",
                "default": False
            }
        }, {
            "args": ["-d", "--delete", "--env-delete"],
            "params": {
                "dest": "delete",
                "action": "store_true",
                "help": "Delete environment with specific eid or ename",
                "default": False
            }
        }, {
            "args": ["--rid"],
            "params": {
                "dest": "rid",
                "action": "store",
                "type": str,
                "help": "Release id",
                "default": None
            }
        }, {
            "args": ["-m", "--mode", "--deployment-mode"],
            "params": {
                "dest": "mode",
                "action": "store",
                "choices": ["multinode", "ha", "ha_full", "ha_compact"],
                "help": "Set deployment mode for specific environment.",
                "default": False
            }
        }]
    },
    "node": {
        "action": node,
        "args": [{
            "args": ["-l", "--list"],
            "params": {
                "dest": "list",
                "action": "store_true",
                "help": "List all nodes.",
                "default": False
            }
        }, {
            "args": ["--alloc"],
            "params": {
                "dest": "alloc",
                "action": "store_true",
                "help": "List only allocated nodes.",
                "default": False
            }
        }, {
            "args": ["-s", "--set"],
            "params": {
                "dest": "set",
                "action": "store_true",
                "help": "Set role for specific node.",
                "default": False
            }
        }, {
            "args": ["--nid", "--node-id"],
            "params": {
                "dest": "nid",
                "action": "store",
                "nargs": '+',
                "type": test_fun,
                "help": "Node id.",
                "default": None
            }
        }, {
            "args": ["-r", "--role"],
            "params": {
                "dest": "role",
                "type": lambda v: v.split(','),
                "action": SetAction,
                "help": "Role to assign for node with nid.",
                "default": None
            }
        }, {
            "args": ["-rm", "--remove"],
            "params": {
                "dest": "remove",
                "action": "store_true",
                "help": "Remove node with specific nid.",
                "default": False
            }
        }]
    },
    "network": {
        "action": network,
        "args": [{
            "args": ["-d", "--default"],
            "params": {
                "dest": "default",
                "action": "store_true",
                "help": "Open default configuration.",
                "default": False
            }
        }, {
            "args": ["-m", "--modify"],
            "params": {
                "dest": "modify",
                "action": "store_true",
                "help": "Modify current configuration.",
                "default": False
            }
        }, {
            "args": ["-v", "--verify"],
            "params": {
                "dest": "verify",
                "action": "store_true",
                "help": "Verify current configuration.",
                "default": False
            }
        }, {
            "args": ["-c", "--cancel"],
            "params": {
                "dest": "cancel",
                "action": "store_true",
                "help": "Remove current changes in configuration.",
                "default": False
            }
        }, {
            "args": ["-s", "--save"],
            "params": {
                "dest": "save",
                "action": "store_true",
                "help": "Save current changes in configuration.",
                "default": False
            }
        }]
    },
    "settings": {
        "action": settings,
        "args": [{
            "args": ["-d", "--default"],
            "params": {
                "dest": "default",
                "action": "store_true",
                "help": "Open default configuration.",
                "default": False
            }
        }, {
            "args": ["-m", "--modify"],
            "params": {
                "dest": "modify",
                "action": "store_true",
                "help": "Modify current configuration.",
                "default": False
            }
        }, {
            "args": ["-c", "--cancel"],
            "params": {
                "dest": "cancel",
                "action": "store_true",
                "help": "Remove current changes in configuration.",
                "default": False
            }
        }, {
            "args": ["-s", "--save"],
            "params": {
                "dest": "save",
                "action": "store_true",
                "help": "Save current changes in configuration.",
                "default": False
            }
        }]
    },
    "logs": {
        "action": logs,
        "args": [{
            "args": ["-db", "--date-before"],
            "params": {
                "dest": "before",
                "action": "store",
                "type": str,
                "help": "Date before which collect logs.",
                "default": None
            }
        }, {
            "args": ["-da", "--date-after"],
            "params": {
                "dest": "after",
                "action": "store",
                "type": str,
                "help": "Date after which collect logs.",
                "default": None
            }
        }, {
            "args": ["-m", "--max-entries"],
            "params": {
                "dest": "max",
                "action": "store",
                "type": str,
                "help": "Maximum number of log entries.",
                "default": None
            }
        }, {
            "args": ["-n", "--node"],
            "params": {
                "dest": "node",
                "action": "store",
                "type": str,
                "help": "From which node to collect logs.",
                "default": None
            }
        }, {
            "args": ["-s", "--source"],
            "params": {
                "dest": "source",
                "action": "store",
                "type": str,
                "help": "Service to use as log source. "
                        "(web backend, REST, orchestrator)",
                "default": None
            }
        }, {
            "args": ["-ll", "--log-level"],
            "params": {
                "dest": "level",
                "action": "store",
                "type": str,
                "help": "Log level. e.g DEBUG, INFO, WARNING",
                "default": None
            }
        }]
    },
    "task": {
        "action": task,
        "args": []
    },
    "notification": {
        "action": notifications,
        "args": []
    },
    "health": {
        "action": health,
        "args": []
    },
    "deploy": {
        "action": deploy,
        "args": [{
            "args": ["--eid", "--env-id"],
            "params": {
                "dest": "eid",
                "action": "store",
                "type": str,
                "help": "environment id",
                "default": None
            }
        }]
    },
    "fact": {
        "action": fact,
        "args": []
    }
}


substitutions = {
    "list": "--list",
    "set": "--set",
    "env": "environment",
    "net": "network",
    "rel": "release",
    "delete": "--delete",
    "create": "--create"
}

if __name__ == '__main__':
    sys.argv = map(
        lambda x: substitutions.get(x, x),
        sys.argv
    )
    parser = argparse.ArgumentParser()
    parser.add_argument(*["--eid", "--env-id"], **{
        "dest": "eid",
        "action": "store",
        "type": str,
        "help": "environment id",
        "default": None
    })
    subparsers = parser.add_subparsers(
        dest="action", help='actions'
    )

    for action, params in actions.iteritems():
        action_parser = subparsers.add_parser(
            action, help=params["action"].__doc__
        )
        for arg in params.get("args", []):
            action_parser.add_argument(
                *arg["args"],
                **arg["params"]
            )

    params, other_params = parser.parse_known_args()
    sys.argv.pop(1)

    if params.action not in actions:
        parser.print_help()
        sys.exit(0)
    current_action = getattr(params, "action")
    delattr(params, "action")
    actions[current_action]["action"](params)
